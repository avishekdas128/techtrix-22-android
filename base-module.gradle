apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdk ProjectConfig.compileSdk

    defaultConfig {
        minSdk ProjectConfig.minSdk
        targetSdk ProjectConfig.targetSdk
        versionCode ProjectConfig.versionCode
        versionName ProjectConfig.versionName

        Properties properties = new Properties()
        if (rootProject.file("local.properties").exists()) {
            properties.load(rootProject.file("local.properties").newDataInputStream())
        }
        buildConfigField("String", "API_KEY", properties.getProperty("API_KEY", ""))

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildTypes {
        release {
            ext.enableCrashlytics = true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            ext.enableCrashlytics = false
            minifyEnabled false
            debuggable true
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation External.timber

    implementation Fragment.fragmentKtx

    implementation Lifecycle.liveData
    implementation Lifecycle.viewModel
    implementation Lifecycle.runtime
    implementation Lifecycle.extension

    implementation Hilt.android
    kapt Hilt.compiler

    implementation Testing.junit4
    implementation Testing.junitAndroidExt
}